.start {
  &__wheel {
    // max-width: rem( 761 );
    display: flex;
    justify-content: center;
    align-items: center;

    &-wrapper {
      padding: 0;

      @include max( 991 ) {
        display: flex;
        justify-content: center;
        align-items: center;
      }
    }
  }
}

.wheel {
  &__circle-background {
    position: absolute;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    background-position: center center;
    background-size: contain;
    background-repeat: no-repeat;
  }

  &__container {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    // width: 761px;
    // height: 761px;
    max-width: 100%;
    max-height: 100%;
    width: 508px;
    height: 508px;
    border-radius: 300px;

    @include max( 1020 ) {
      width: calc( 50vw - 60px );
      height: calc( 50vw - 60px );
    }

    @include max( 899 ) {
      width: calc(70vw - 60px);
      height: calc(70vw - 60px);
    }

    @include max( 669 ) {
      width: calc(80vw - 60px);
      height: calc(80vw - 60px);
    }

    @include max( 479 ) {
      width: calc(100vw - 60px);
      height: calc(100vw - 60px);
    }
  }

  &__slices {
    position: relative;
    display: block;
    // width: 575px;
    // height: 575px;
    // top: -2px;
    // left: 3px;
    width: 75.559%;
    height: 75.559%;
    top: 0;
    left: 0;
    box-sizing: border-box;
    border: 12px solid transparent;
    border-radius: 300px;

    @include max( 762 ) {
      // width: calc((100vw - 60px) * 0.757);
      // height: calc((100vw - 60px) * 0.757);
      // left: 2px;
    }

    @include max( 539 ) {
      // width: calc((100vw - 60px) * 0.77);
      // height: calc((100vw - 60px) * 0.77);
      // left: 1px;
      // top: -1px;
    }

    @include max( 419 ) {
      // left: 0;
    }
  }

  &__centerpiece {
    position: absolute;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 26.307%;

    img {
      position: relative;
      // left: rem( -1 );
    }

    @include max( 762 ) {
      // NOTE: This is the same ratio as 204px at full size.
      width: 25%;
    }

    @include max( 419 ) {
      width: 25%;
    }
  }

  &__slice {
    cursor: pointer;
    position: absolute;
    display: inline-block;
    max-width: rem( 241 );
    max-height: rem( 277 );
    padding: 5px;
    opacity: 0.7;
    box-sizing: border-box;
    margin: 0;
    // NOTE: vv old note. Redid ULS version with 5px pad and slightly different percentage dimensions.
    // NOTE: This padding and the corresponding doubled subtraction on the
    // max-width/-height of the slice SVGs is for Chrome/chromium browsers.
    // Their SVG dimension handling is stupid.
    // padding: 1px;

    @include max( 767 ) {
      // max-width:;
    }

    // NOTE: `1 to 6` would be 1, 2, ..., 6. `1 through 6` is 1, 2, ..., 5.
    @for $index from 1 through 6 {
      $path_id: '#slice-' + $index + '-path';
      // @debug $path_id; Leaving here in case anyone wants to play with some SassScript!

      &--#{ $index } {
        clip-path: url( $path_id );
      }
    }

    //#region Single Slices' Sizing
    &--1, &--3, &--4, &--6 {
      // width: 240px;
      // height: 226px;
      width: 42.538%;
      height: 40.698%;

      @include max( 762 ) {
        width: 43.56%;
        height: 40.655%;
      }
    }

    &--2, &--5 {
      // width: 188px;
      // height: 275px;
      width: 34.008%;
      height: 51.134%;

      @include max( 762 ) {
        width: 34%;
        height: 50.25%;
      }
    }
    //#endregion

    //#region Single Slices' Positioning
    // NOTE: This one was needed after converting all of the clip-path source SVGs to relative paths.
    &--2, &--5 {
      img {
        top: 2px !important;
        left: 2px !important;
      }
    }

    &--1 {
      top: -0.8%;
      // left: 49.8%;
      left: 51.1%;

      @include max( 767 ) {
        top: -0.6%;
      }
    }

    &--2 {
      // top: 24.8%;
      // left: 66.1%;
      top: 25%;
      left: 67.1%;
    }

    &--3 {
      // top: 60%;
      right: 6.5%;
      top: 60.5%;

      @include max( 767 ) {
        top: 60.3%;
      }
    }

    &--4 {
      // bottom: -1.4%;
      // left: 5.15%;
      bottom: -0.9%;
      left: 6.05%;
    }

    &--5 {
      // right: 67.6%;
      bottom: 24.5%;
      right: 67.8%;
    }

    &--6 {
      // top: -0.65%;
      // left: 5.3%;
      top: -0.95%;
      left: 6.5%;
    }
    //#endregion

    img {
      position: absolute;
      // width: calc( 100% - 2px );
      // height: calc( 100% - 2px );
      width: 100%;
      height: auto;
      max-height: 100%;
      top: 1px;
      left: 1px;
      transition: 0.2s ease;
    }

    img:first-child {
      opacity: 1;
      visibility: visible;
      z-index: 1;
    }

    img:last-child {
      // NOTE: Realized that this isn't necessary and actually causes a brief flash of the
      // background container as the opacities of both images reach 0.5 simultaneously. When the
      // base state is visible, the active state is not, therefore we don't need the active one to
      // actually do anything; it's always there.
      // opacity: 0;
      // visibility: hidden;
    }

    &.--active, &:hover {
      img:first-child {
        opacity: 0;
        visibility: hidden;
      }

      img:last-child {
        // NOTE: See note above.
        // opacity: 1;
        // visibility: visible;
      }
    }
  }
}

//#region Slices
.slices {
  &__clip-paths {
    // TODO: Check Chrome and Safari on this one. clip-path is weird.
    width: 0;
    height: 0;
    opacity: 0;
  }
}

// NOTE: See note on .wheel__slice.
.slice {
  width: 100%;
  max-width: calc( #{ rem( 200 ) } - #{ rem( 2 ) } );
  height: auto;
  max-height: calc( #{ rem( 200 ) } - #{ rem( 2 ) } );

  &, &-inside, &-text {
    transition: 0.2s ease;
  }
}

svg[class^="slice-"] {
  &:hover .slice-text {
    fill: $white;
  }
}
//#endregion
